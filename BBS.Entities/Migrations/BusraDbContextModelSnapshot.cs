// <auto-generated />
using System;
using BBS.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BBS.Entities.Migrations
{
    [DbContext(typeof(BusraDbContext))]
    partial class BusraDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BBS.Models.BidOnPrimaryOffering", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ApprovedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDownload")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsESign")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("integer");

                    b.Property<double>("PlacementAmount")
                        .HasColumnType("double precision");

                    b.Property<int?>("StateId")
                        .HasColumnType("integer");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserLoginId")
                        .HasColumnType("integer");

                    b.Property<int>("VerificationStatus")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("StateId");

                    b.HasIndex("UserLoginId");

                    b.ToTable("BidOnPrimaryOfferings");
                });

            modelBuilder.Entity("BBS.Models.BidShare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<double>("MaximumBidPrice")
                        .HasColumnType("double precision");

                    b.Property<double>("MinimumBidPrice")
                        .HasColumnType("double precision");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OfferedShareId")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("UserLoginId")
                        .HasColumnType("integer");

                    b.Property<int>("VerificationStateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OfferedShareId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("UserLoginId");

                    b.HasIndex("VerificationStateId");

                    b.ToTable("BidShares");
                });

            modelBuilder.Entity("BBS.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsWebView")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OfferedShareMainTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OfferedShareMainTypeId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsWebView = false,
                            Name = "Information",
                            OfferedShareMainTypeId = 2
                        },
                        new
                        {
                            Id = 2,
                            IsWebView = false,
                            Name = "Deal Teaser",
                            OfferedShareMainTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            IsWebView = false,
                            Name = "Team",
                            OfferedShareMainTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            IsWebView = false,
                            Name = "Interviews",
                            OfferedShareMainTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            IsWebView = false,
                            Name = "Tags",
                            OfferedShareMainTypeId = 1
                        },
                        new
                        {
                            Id = 6,
                            IsWebView = false,
                            Name = "Short Description",
                            OfferedShareMainTypeId = 1
                        },
                        new
                        {
                            Id = 7,
                            IsWebView = false,
                            Name = "Deal Teaser",
                            OfferedShareMainTypeId = 1
                        },
                        new
                        {
                            Id = 8,
                            IsWebView = false,
                            Name = "Company Profile",
                            OfferedShareMainTypeId = 1
                        },
                        new
                        {
                            Id = 9,
                            IsWebView = false,
                            Name = "Terms & Legal",
                            OfferedShareMainTypeId = 1
                        },
                        new
                        {
                            Id = 10,
                            IsWebView = false,
                            Name = "Documents",
                            OfferedShareMainTypeId = 1
                        },
                        new
                        {
                            Id = 11,
                            IsWebView = false,
                            Name = "Minumum Investment",
                            OfferedShareMainTypeId = 1
                        },
                        new
                        {
                            Id = 12,
                            IsWebView = false,
                            Name = "Closing Date",
                            OfferedShareMainTypeId = 1
                        },
                        new
                        {
                            Id = 13,
                            IsWebView = false,
                            Name = "Investment Manager",
                            OfferedShareMainTypeId = 1
                        },
                        new
                        {
                            Id = 14,
                            IsWebView = false,
                            Name = "Fees in %",
                            OfferedShareMainTypeId = 1
                        });
                });

            modelBuilder.Entity("BBS.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("OfferPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("BBS.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "United arab Emirates"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pakistan"
                        },
                        new
                        {
                            Id = 3,
                            Name = "British"
                        });
                });

            modelBuilder.Entity("BBS.Models.DebtRound", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DebtRounds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mezzanine"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Growth"
                        });
                });

            modelBuilder.Entity("BBS.Models.EmployementType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EmployementTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Employed"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Unemployed"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Full-Time"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Part-Time"
                        });
                });

            modelBuilder.Entity("BBS.Models.EquityRound", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EquityRounds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pre-Seed"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Seed"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Angel"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Serie A"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Serie B"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Serie C"
                        });
                });

            modelBuilder.Entity("BBS.Models.GrantType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GrantTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Normal Shares for ownership, voting, and share price appreciation",
                            Name = "Common"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Hybrid shares for ownership, non-voting, but its shareholdres and paid dividends prior to other shareholders",
                            Name = "Prefered"
                        },
                        new
                        {
                            Id = 3,
                            Description = "An obligation to offer dividend or interest which typically includes a promise to convert to equity. Debt holdres get paid back before any other shareholder",
                            Name = "Debt"
                        });
                });

            modelBuilder.Entity("BBS.Models.InvestorDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InvestorRiskType")
                        .HasColumnType("integer");

                    b.Property<int>("InvestorType")
                        .HasColumnType("integer");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("InvestorDetails");
                });

            modelBuilder.Entity("BBS.Models.InvestorRiskType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("InvestorRiskTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Value = "High Risk"
                        },
                        new
                        {
                            Id = 2,
                            Value = "Normal"
                        });
                });

            modelBuilder.Entity("BBS.Models.InvestorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("InvestorTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Value = "Retail"
                        },
                        new
                        {
                            Id = 2,
                            Value = "Qualified"
                        });
                });

            modelBuilder.Entity("BBS.Models.IssuedDigitalShare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CertificateKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CertificateUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<bool>("IsCertified")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ShareId")
                        .HasColumnType("integer");

                    b.Property<int>("UserLoginId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserLoginId");

                    b.ToTable("IssuedDigitalShares");
                });

            modelBuilder.Entity("BBS.Models.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Nationality");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Emirati"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pakistani"
                        },
                        new
                        {
                            Id = 3,
                            Name = "United Kingdom"
                        });
                });

            modelBuilder.Entity("BBS.Models.OfferedShare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("IssuedDigitalShareId")
                        .HasColumnType("integer");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("OfferPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("OfferTimeLimitId")
                        .HasColumnType("integer");

                    b.Property<int>("OfferTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("OfferedShareMainTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("PrivateShareKey")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("UserLoginId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IssuedDigitalShareId");

                    b.HasIndex("OfferTimeLimitId");

                    b.HasIndex("OfferTypeId");

                    b.HasIndex("OfferedShareMainTypeId");

                    b.HasIndex("UserLoginId");

                    b.ToTable("OfferedShares");
                });

            modelBuilder.Entity("BBS.Models.OfferedShareMainType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OfferedShareMainTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Primary"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Secondary"
                        });
                });

            modelBuilder.Entity("BBS.Models.OfferPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OfferedShareId")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserLoginId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OfferedShareId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("UserLoginId");

                    b.ToTable("OfferPayments");
                });

            modelBuilder.Entity("BBS.Models.OfferTimeLimit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OfferTimeLimits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Value = "3 Days"
                        },
                        new
                        {
                            Id = 2,
                            Value = "1 Week"
                        },
                        new
                        {
                            Id = 3,
                            Value = "3 Months"
                        },
                        new
                        {
                            Id = 4,
                            Value = "6 Months"
                        });
                });

            modelBuilder.Entity("BBS.Models.OfferType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OfferTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Auction"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Private"
                        });
                });

            modelBuilder.Entity("BBS.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Value = "Bank Transfer"
                        },
                        new
                        {
                            Id = 2,
                            Value = "Debit/Credit Cash"
                        });
                });

            modelBuilder.Entity("BBS.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("AddressLine")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("AnnualIncome")
                        .HasColumnType("numeric");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfEmployement")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("EmiratesID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("EmployementTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("EmployerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("HaveConvicted")
                        .HasColumnType("boolean");

                    b.Property<bool>("HaveCriminalRecord")
                        .HasColumnType("boolean");

                    b.Property<bool>("HaveExperience")
                        .HasColumnType("boolean");

                    b.Property<bool>("HavePriorExpirence")
                        .HasColumnType("boolean");

                    b.Property<bool>("HaveTraining")
                        .HasColumnType("boolean");

                    b.Property<string>("IBANNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsIndividual")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPublicSectorEmployee")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsUSCitizen")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NationalityId")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VaultNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("VerificationState")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("EmployementTypeId");

                    b.HasIndex("NationalityId");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedById = 0,
                            AddedDate = new DateTime(2022, 8, 10, 16, 34, 47, 437, DateTimeKind.Local).AddTicks(652),
                            AddressLine = "Dubai",
                            AnnualIncome = 10000000m,
                            City = "Dubai",
                            CountryId = 1,
                            DateOfBirth = new DateTime(2022, 8, 10, 11, 4, 47, 437, DateTimeKind.Utc).AddTicks(664),
                            DateOfEmployement = new DateTime(2022, 8, 10, 11, 4, 47, 437, DateTimeKind.Utc).AddTicks(668),
                            Email = "admin@bursa.com",
                            EmiratesID = "000000000000",
                            EmployementTypeId = 1,
                            EmployerName = "Bursa",
                            FirstName = "Admin",
                            HaveConvicted = false,
                            HaveCriminalRecord = false,
                            HaveExperience = true,
                            HavePriorExpirence = true,
                            HaveTraining = true,
                            IBANNumber = "00000000000",
                            IsDeleted = false,
                            IsIndividual = false,
                            IsPublicSectorEmployee = false,
                            IsUSCitizen = false,
                            LastName = "",
                            ModifiedById = 0,
                            ModifiedDate = new DateTime(2022, 8, 10, 16, 34, 47, 437, DateTimeKind.Local).AddTicks(662),
                            NationalityId = 1,
                            PhoneNumber = "5512345678",
                            VaultNumber = "00000000000",
                            VerificationState = 2
                        });
                });

            modelBuilder.Entity("BBS.Models.PersonalAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Back")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Front")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("BBS.Models.PrimaryOfferShareData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.ToTable("PrimaryOfferShareDatas");
                });

            modelBuilder.Entity("BBS.Models.Restriction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Restrictions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "To the best of your knwledge, are there any sale or transfer restrictions related to these shares ? Are you a cofounder or employee at the company ? "
                        },
                        new
                        {
                            Id = 2,
                            Name = "Are you a cofounder or employee at the company?"
                        });
                });

            modelBuilder.Entity("BBS.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Investor"
                        });
                });

            modelBuilder.Entity("BBS.Models.SecondaryOfferShareData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("OfferPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("OfferedShareId")
                        .HasColumnType("integer");

                    b.Property<int>("TotalShares")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("OfferedShareId");

                    b.ToTable("SecondaryOfferShareDatas");
                });

            modelBuilder.Entity("BBS.Models.Share", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BusinessLogo")
                        .HasColumnType("text");

                    b.Property<string>("CompanyInformationDocument")
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfGrant")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DebtRoundId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int?>("EquityRoundId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<int>("GrantTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("GrantValuation")
                        .HasColumnType("text");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("LastValuation")
                        .HasColumnType("text");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NumberOfShares")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool?>("Restriction1")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Restriction2")
                        .HasColumnType("boolean");

                    b.Property<string>("ShareOwnershipDocument")
                        .HasColumnType("text");

                    b.Property<decimal>("SharePrice")
                        .HasColumnType("numeric");

                    b.Property<int>("StorageLocationId")
                        .HasColumnType("integer");

                    b.Property<int>("UserLoginId")
                        .HasColumnType("integer");

                    b.Property<int>("VerificationState")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserLoginId");

                    b.ToTable("Shares");
                });

            modelBuilder.Entity("BBS.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pending",
                            Value = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Completed",
                            Value = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Returned",
                            Value = 0
                        });
                });

            modelBuilder.Entity("BBS.Models.StorageLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("StorageLocations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dropbox"
                        },
                        new
                        {
                            Id = 2,
                            Name = "One Drive"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Google "
                        },
                        new
                        {
                            Id = 4,
                            Name = "iCloud"
                        },
                        new
                        {
                            Id = 5,
                            Name = "My Desktop"
                        });
                });

            modelBuilder.Entity("BBS.Models.UserLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Passcode")
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("UserLogin");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedById = 0,
                            AddedDate = new DateTime(2022, 8, 10, 16, 34, 47, 437, DateTimeKind.Local).AddTicks(1521),
                            IsDeleted = false,
                            ModifiedById = 0,
                            ModifiedDate = new DateTime(2022, 8, 10, 16, 34, 47, 437, DateTimeKind.Local).AddTicks(1522),
                            Passcode = "MDAwMA==",
                            PasswordHash = new byte[] { 121, 111, 98, 228, 58, 135, 57, 207, 170, 190, 128, 167, 127, 225, 69, 154, 19, 231, 208, 242, 73, 70, 27, 238, 17, 251, 107, 160, 35, 69, 92, 197, 210, 26, 150, 221, 47, 160, 196, 66, 85, 55, 41, 105, 206, 31, 195, 200, 249, 97, 41, 222, 196, 179, 163, 4, 131, 76, 5, 25, 49, 193, 65, 131, 254, 121, 95, 234, 90, 101, 41, 170, 138, 16, 40, 224, 156, 79, 219, 24, 12, 254, 203, 177, 233, 38, 140, 84, 56, 57, 88, 162, 9, 142, 210, 57, 47, 109, 195, 198, 152, 5, 66, 52, 151, 42, 239, 234, 201, 143, 171, 74, 51, 142, 16, 64, 38, 116, 210, 2, 121, 240, 185, 157, 215, 255, 59, 47 },
                            PasswordSalt = new byte[] { 113, 127, 109, 37, 22, 3, 26, 214, 211, 1, 184, 6, 197, 171, 71, 221, 110, 87, 49, 157, 117, 130, 144, 111, 235, 227, 156, 180, 136, 62, 112, 159, 37, 150, 163, 43, 172, 220, 0, 10, 203, 212, 101, 188, 17, 18, 144, 234, 182, 203, 232, 73, 125, 6, 20, 238, 202, 194, 29, 85, 245, 113, 180, 177 },
                            PersonId = 1,
                            RefreshToken = "",
                            Username = ""
                        });
                });

            modelBuilder.Entity("BBS.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IPAddress")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("UserLoginId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserLoginId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedById = 0,
                            AddedDate = new DateTime(2022, 8, 10, 16, 34, 47, 437, DateTimeKind.Local).AddTicks(1537),
                            IsDeleted = false,
                            ModifiedById = 0,
                            ModifiedDate = new DateTime(2022, 8, 10, 16, 34, 47, 437, DateTimeKind.Local).AddTicks(1538),
                            RoleId = 2,
                            UserLoginId = 1
                        });
                });

            modelBuilder.Entity("BBS.Models.BidOnPrimaryOffering", b =>
                {
                    b.HasOne("BBS.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBS.Models.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBS.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.HasOne("BBS.Models.UserLogin", "UserLogin")
                        .WithMany()
                        .HasForeignKey("UserLoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("PaymentType");

                    b.Navigation("State");

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("BBS.Models.BidShare", b =>
                {
                    b.HasOne("BBS.Models.OfferedShare", "OfferedShare")
                        .WithMany()
                        .HasForeignKey("OfferedShareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBS.Models.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBS.Models.UserLogin", "UserLogin")
                        .WithMany()
                        .HasForeignKey("UserLoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBS.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("VerificationStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferedShare");

                    b.Navigation("PaymentType");

                    b.Navigation("State");

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("BBS.Models.Category", b =>
                {
                    b.HasOne("BBS.Models.OfferedShareMainType", "OfferedShareMainType")
                        .WithMany()
                        .HasForeignKey("OfferedShareMainTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferedShareMainType");
                });

            modelBuilder.Entity("BBS.Models.InvestorDetail", b =>
                {
                    b.HasOne("BBS.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("BBS.Models.IssuedDigitalShare", b =>
                {
                    b.HasOne("BBS.Models.UserLogin", "UserLogin")
                        .WithMany()
                        .HasForeignKey("UserLoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("BBS.Models.OfferedShare", b =>
                {
                    b.HasOne("BBS.Models.IssuedDigitalShare", "IssuedDigitalShare")
                        .WithMany()
                        .HasForeignKey("IssuedDigitalShareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBS.Models.OfferTimeLimit", "OfferTimeLimit")
                        .WithMany()
                        .HasForeignKey("OfferTimeLimitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBS.Models.OfferType", "OfferType")
                        .WithMany()
                        .HasForeignKey("OfferTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBS.Models.OfferedShareMainType", "OfferedShareMainType")
                        .WithMany()
                        .HasForeignKey("OfferedShareMainTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBS.Models.UserLogin", "UserLogin")
                        .WithMany()
                        .HasForeignKey("UserLoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IssuedDigitalShare");

                    b.Navigation("OfferTimeLimit");

                    b.Navigation("OfferType");

                    b.Navigation("OfferedShareMainType");

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("BBS.Models.OfferPayment", b =>
                {
                    b.HasOne("BBS.Models.OfferedShare", "OfferedShare")
                        .WithMany()
                        .HasForeignKey("OfferedShareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBS.Models.PaymentType", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBS.Models.UserLogin", "UserLogin")
                        .WithMany()
                        .HasForeignKey("UserLoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferedShare");

                    b.Navigation("PaymentType");

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("BBS.Models.Person", b =>
                {
                    b.HasOne("BBS.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBS.Models.EmployementType", "EmployementType")
                        .WithMany()
                        .HasForeignKey("EmployementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBS.Models.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("EmployementType");

                    b.Navigation("Nationality");
                });

            modelBuilder.Entity("BBS.Models.PersonalAttachment", b =>
                {
                    b.HasOne("BBS.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("BBS.Models.PrimaryOfferShareData", b =>
                {
                    b.HasOne("BBS.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBS.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("BBS.Models.SecondaryOfferShareData", b =>
                {
                    b.HasOne("BBS.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBS.Models.OfferedShare", "OfferedShare")
                        .WithMany()
                        .HasForeignKey("OfferedShareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("OfferedShare");
                });

            modelBuilder.Entity("BBS.Models.Share", b =>
                {
                    b.HasOne("BBS.Models.UserLogin", "UserLogin")
                        .WithMany()
                        .HasForeignKey("UserLoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserLogin");
                });

            modelBuilder.Entity("BBS.Models.UserLogin", b =>
                {
                    b.HasOne("BBS.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("BBS.Models.UserRole", b =>
                {
                    b.HasOne("BBS.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BBS.Models.UserLogin", "UserLogin")
                        .WithMany()
                        .HasForeignKey("UserLoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("UserLogin");
                });
#pragma warning restore 612, 618
        }
    }
}
